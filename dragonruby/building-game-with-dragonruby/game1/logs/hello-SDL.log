* [Engine] Log started at 2025/4/1 19:55:3
* [Engine] DragonRuby Game Toolkit
* [Engine]   Version: 6.23
* [Engine]   Tier: Standard
* [Engine]   GIT Hash: b9ba2652ac016be4bed171795e0ce6fa39d3ac82
* [Engine]   Build Date: Mar 20 2025 19:12:10
* [Engine] Platform: Linux
* [Engine] 
* [Engine] *******************************************************************************************
* [Engine] *** This is the Standard license build!                                                 ***
* [Engine] *** Get more with an Indie or Pro license such as C extensions, mobile dev, and Steam!  ***
* [Engine] *** Details at http://dragonruby.org/#purchase                                          ***
* [Engine] *******************************************************************************************
* [Engine] 
! [Engine] Metadata file does not have all required fields!
- [Engine] Process Working Directory: /home/david/Documents/code/perlib/dragonruby/building-game-with-dragonruby/game1/
- [Engine] Game Dir: /home/david/Documents/code/perlib/dragonruby/building-game-with-dragonruby/game1//mygame
- [Engine] Game ID: hello-SDL
- [Engine] Game Title: Update metadata/game_metadata.txt in your mygame directory to change this title.
- [Engine] Game Version: 1.0
- [Engine] Game Package ID: org.dragonruby.hello-SDL
- [Engine] Game Developer ID: dragonruby
- [Engine] Game Developer Title: DragonRuby LLC
- [Engine] Production Build: no
- [Engine] Remote Hotload: no
? [Engine] Loading cvars from file 'metadata/cvars.txt' ...
? [Engine] File 'metadata/cvars.txt' line 44 setting cvar 'log.filter_subsystems' to 'HTTPServer'
? [Engine] File 'metadata/cvars.txt' complete
- [Render] SDL video backend: x11
- [Render] SDL renderer backend: opengl
- [Render] Window size: 1280x720 (requested 1280x720)
- [Render] Fullscreen Desktop mode: no
- [Render] HD: no
- [Render] HighDPI: no
- [Render] Max texture size: 8192x8192 (system reported 8192x8192)
- [Render] Logical render size: 1280x720
- [Render] Native render size: 1280x720
? [Engine] RNG seed has been set to 1743562504.
- [Engine] Janitor is using 1 threads.
- [Game] * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
An exception occurred soon after ~$gtk.reset~ was invoked.

Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.

You may have attempted to interact with properties on ~args.state~ that no longer have a value.

There are a few ways to fix exceptions that fall into this category:

1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
   with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
   reset on the next frame before invoking your ~tick~ method).
2. Anywhere you are using ~$gtk.reset~, immediately set default values for
   properties on ~args.state~ that are needed to complete the execution
   of the rest of your ~tick~ function successfully.
3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
   and ensures it has a consistent/valid state.

   Take a look at the following sample apps for insights on how to do this:
   - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
   - =./samples/99_genre_platformer/shadows/app/main.rb=

** NOTE:
The options above are ordered by quickest to implement (but probably not
bulletproof), to more work to implement (but a better design long term).

* EXCEPTION THROWN:
** Failed to load/reload app/main.rb.
line 11:23: syntax error, unexpected '='
line 24:8: syntax error, unexpected local variable or method, expecting '}'
line 33:1: syntax error, unexpected ']', expecting keyword_end



** Backtrace:

* Backtrace ~$gtk.reset~ last invocation: (24600)
- [Game] 
- [Game] Easing::ease can be expensive to invoke, consider using Easing.smooth_(start|stop|step) instead.
- [Game] 
- [Game] [Message ID: [:consider_smooth!]]
- [Game] 
- [Game] * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
An exception occurred soon after ~$gtk.reset~ was invoked.

Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.

You may have attempted to interact with properties on ~args.state~ that no longer have a value.

There are a few ways to fix exceptions that fall into this category:

1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
   with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
   reset on the next frame before invoking your ~tick~ method).
2. Anywhere you are using ~$gtk.reset~, immediately set default values for
   properties on ~args.state~ that are needed to complete the execution
   of the rest of your ~tick~ function successfully.
3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
   and ensures it has a consistent/valid state.

   Take a look at the following sample apps for insights on how to do this:
   - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
   - =./samples/99_genre_platformer/shadows/app/main.rb=

** NOTE:
The options above are ordered by quickest to implement (but probably not
bulletproof), to more work to implement (but a better design long term).

* EXCEPTION THROWN:
** Failed to load/reload app/main.rb.
line 24:8: syntax error, unexpected local variable or method, expecting '}'
line 33:1: syntax error, unexpected ']', expecting keyword_end



** Backtrace:

* Backtrace ~$gtk.reset~ last invocation: (25680)
? [Engine] ~reset~ has been invoked (25942).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] ~reset~ has been invoked (26555).
? [Engine] RNG seed has been set to 1743562504.
- [Game] * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
An exception occurred soon after ~$gtk.reset~ was invoked.

Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.

You may have attempted to interact with properties on ~args.state~ that no longer have a value.

There are a few ways to fix exceptions that fall into this category:

1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
   with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
   reset on the next frame before invoking your ~tick~ method).
2. Anywhere you are using ~$gtk.reset~, immediately set default values for
   properties on ~args.state~ that are needed to complete the execution
   of the rest of your ~tick~ function successfully.
3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
   and ensures it has a consistent/valid state.

   Take a look at the following sample apps for insights on how to do this:
   - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
   - =./samples/99_genre_platformer/shadows/app/main.rb=

** NOTE:
The options above are ordered by quickest to implement (but probably not
bulletproof), to more work to implement (but a better design long term).

* EXCEPTION THROWN:
** Failed to load/reload app/main.rb.
line 24:8: syntax error, unexpected local variable or method, expecting '}'
line 33:1: syntax error, unexpected ']', expecting keyword_end



** Backtrace:

* Backtrace ~$gtk.reset~ last invocation: (29055)
? [Engine] ~reset~ has been invoked (30530).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] Reloaded app/main.rb. (30532)
- [Game] * EXCEPTION:
* EXCEPTION: ~Runtime#add_to_require_queue~ failed for =app/main.rb=.
* ERROR - :reset method missing on ~Array~.

#+begin_src ~Array#inspect~
[{:x=>800, :y=>120, :w=>64, :h=>64, :path=>"sprites/target.png"}, {:x=>920, :y=>600, :w=>64, :h=>64, :path=>"sprites/target.png"}, {:x=>1020, :y=>320, :w=>64, :h=>64, :path=>"sprites/target.png"}]
#+end_src ~Array#inspect~



The method named
  :reset
doesn't exist on [Array, #<Class:#<Array:0x7f24186881d0>>, Enumerable].

(suggestions above)
** Backtrace:
*** app/main.rb:76 (46192)
? [Engine] ~reset~ has been invoked (48112).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] Reloaded app/main.rb. (48112)
? [Engine] ~reset~ has been invoked (78501).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] Reloaded app/main.rb. (78501)
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
- [Game] fireball hit target!
? [Engine] ~reset~ has been invoked (88034).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] Reloaded app/main.rb. (88034)
- [Game] * EXCEPTION POSSIBLY CAUSED BY CALLING ~gtk.reset~: maybe use ~$gtk.reset_next_tick~ instead.
An exception occurred soon after ~$gtk.reset~ was invoked.

Keep in mind that ~$gtk.reset~ doesn't stop the rest of your ~tick~ method from being invoked.

You may have attempted to interact with properties on ~args.state~ that no longer have a value.

There are a few ways to fix exceptions that fall into this category:

1. Wherever you are using ~$gtk.reset~ within ~tick~, replace
   with ~$gtk.reset_next_tick~ (this function will tell DragonRuby to
   reset on the next frame before invoking your ~tick~ method).
2. Anywhere you are using ~$gtk.reset~, immediately set default values for
   properties on ~args.state~ that are needed to complete the execution
   of the rest of your ~tick~ function successfully.
3. Do not use ~$gtk.reset~ and instead create a function that reinitializes your game
   and ensures it has a consistent/valid state.

   Take a look at the following sample apps for insights on how to do this:
   - =./samples/99_genre_boss_battle/boss_battle_game_jam/app/main.rb=
   - =./samples/99_genre_platformer/shadows/app/main.rb=

** NOTE:
The options above are ordered by quickest to implement (but probably not
bulletproof), to more work to implement (but a better design long term).

* EXCEPTION THROWN:
** Failed to load/reload app/main.rb.
line 8:29: syntax error, unexpected tSTRING, expecting keyword_do or '{' or '('
line 85:0: syntax error, unexpected end of file, expecting keyword_end



** Backtrace:

* Backtrace ~$gtk.reset~ last invocation: (97269)
? [Engine] ~reset~ has been invoked (98949).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] Reloaded app/main.rb. (98949)
- [Game] * INFO - Game state and exception will be written to logs/exceptions/game_state_0.txt and logs/exceptions/current.txt.
- [Game]   global_tick_count: 98950
- [Game]   tick_count: 0
- [Game] * EXCEPTION:
* ERROR:
Undefined method args for main. Did you forget to pass in args as a parameter?


** Backtrace:
*** app/main.rb:4:in spawn_target
*** app/main.rb:23:in tick (98950)
? [Engine] ~reset~ has been invoked (100029).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] Reloaded app/main.rb. (100029)
- [Game] * INFO - Game state and exception will be written to logs/exceptions/game_state_0.txt and logs/exceptions/current.txt.
- [Game]   global_tick_count: 100030
- [Game]   tick_count: 0
- [Game] * EXCEPTION: 'spawn_target': wrong number of arguments (2 for 1)
** Backtrace:
*** app/main.rb:1:in spawn_target
*** app/main.rb:23:in tick (100030)
? [Engine] ~reset~ has been invoked (111849).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] Reloaded app/main.rb. (111849)
? [Engine] ~reset~ has been invoked (457563).
? [Engine] RNG seed has been set to 1743562504.
? [Engine] Reloaded app/main.rb. (457563)
* [Engine] Logging shutting down
